# Neural Style Transfer
import tensorflow as tf
import tensorflow_hub as hub
import matplotlib.pyplot as plt

# Function to load an image from a given file path
def load_image(image_path):
    # Read the image file
    img = tf.io.read_file(image_path)
    # Decode the image to a tensor with 3 color channels (RGB)
    img = tf.image.decode_image(img, channels=3)
    # Convert the image tensor to float32 and normalize its values to [0, 1]
    img = tf.image.convert_image_dtype(img, tf.float32)
    # Add an extra dimension to the image tensor to represent batch size
    img = img[tf.newaxis, :]
    return img

# Function to display an image using matplotlib
def show_image(image, title='Image'):
    # If the image tensor has more than 3 dimensions, squeeze it to 3 dimensions
    if len(image.shape) > 3:
        image = tf.squeeze(image, axis=0)
    # Display the image using matplotlib
    plt.imshow(image)
    plt.title(title)
    plt.axis('off')

# Load content and style images using the load_image function
content_image = load_image('content_image.jpg')
style_image = load_image('style_image.jpg')

# Load the pre-trained style transfer model from TensorFlow Hub
# This model is capable of transferring the style of the style image to the content image
hub_model = hub.load('https://tfhub.dev/google/magenta/arbitrary-image-stylization-v1-256/2')

# Perform style transfer using the loaded model
# The model takes the content and style images as input and returns the stylized image
stylized_image = hub_model(tf.constant(content_image), tf.constant(style_image))[0]

# Display the original content image, style image, and the stylized image side by side
plt.figure(figsize=(12, 4))

# Display the content image
plt.subplot(1, 3, 1)
show_image(content_image, 'Content Image')

# Display the style image
plt.subplot(1, 3, 2)
show_image(style_image, 'Style Image')

# Display the stylized image
plt.subplot(1, 3, 3)
show_image(stylized_image, 'Stylized Image')

# Show all the plotted images
plt.show()
